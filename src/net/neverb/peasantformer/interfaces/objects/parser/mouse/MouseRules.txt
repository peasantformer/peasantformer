
    Config = Space Group EOT {config};

    Group    = Literal Lcurly PropertyList Rcurly {group};
    PropertyList = (Property / Group)* {propertylist};
    Property = Literal Equals (
          Number
        / QuotedString
        / Point
        / Point2DArray
    ) Space SemiColon {property};

    Lcurly = "{" Space ;
    Rcurly = "}" Space ;

    Equals    = "=" Space ;
    SemiColon = ";" Space ;

    PointNDArray = Lbracket PointNDElem (Comma PointNDElem)* Rbracket ;
    PointNDElem  = PointNDArray / Point ;

    Point2DArray = Lbracket PointArray (Comma PointArray)* Rbracket {point2d} ;
    PointArray   = Lbracket Point (Comma Point)* Rbracket {point1d} ;
    Point = Lbracket Number Comma Number Rbracket  {point} ;


    Lbracket = "[" Space ;
    Comma    = "," Space ;
    Rbracket = "]" Space ;


    Number = NumberRules Space {number} ;
    NumberRules = "-"?  Digit+ ("." Digit+)? [fmpr]?;

    QuotedString   = "\"" UnquotedString "\"" Space {string};
    UnquotedString = Characters ("\\\"" Characters)*;
    Characters     = ^["\\]* ;

    Literal      = LiteralFirst LiteralRest* Space ;
    LiteralRest  = Letter / Digit / Separators ;
    LiteralFirst = Letter ;

    Separators = [-_] ;
    Digit   = [0-9] ;
    Letter  = [a-z] / [A-Z] ;
    Space   = ([ \r\n\t] / Comment)*;
    Comment = ("//" / "#") _++ EOL ;
    EOL = "\n" / EOT ;
    EOT = !_ ;