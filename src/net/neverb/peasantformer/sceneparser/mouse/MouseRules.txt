
    Config = Space Group EOT {config}  ~{recover} ;

    Group    = Literal Lcurly PropertyList Rcurly {group};
    PropertyList = (Property / Group)* {propertylist};
    Property = Literal Equals (
          NumberDimension
        / QuotedString
        / Point
        / Point2DArray
        / Color
        / IDArray
    ) Space SemiColon {property};


    PointNDArray = Lbracket PointNDElem (Comma PointNDElem)* Rbracket ;
    PointNDElem  = PointNDArray / Point ;

    Point2DArray = Lbracket PointArray (Comma PointArray)* Rbracket {point2d} ;
    PointArray   = Lbracket Point (Comma Point)* Rbracket {point1d} ;
    Point = Lbrace NumberDimension Comma NumberDimension Rbrace {point} ;

    IDArray = Lbracket ID (Comma ID)* Rbracket {idarray};

    ID = NumberPositive Space {id} ;

    Color = "#" ColorARGB Space {color} ;

    ColorARGB = HexDigit HexDigit
                HexDigit HexDigit
                HexDigit HexDigit
               (HexDigit HexDigit)? ;

    Lcurly    = "{" Space <{>;
    Rcurly    = "}" Space <}>;
    Lbrace    = "(" Space <(>;
    Rbrace    = ")" Space <)>;
    Lbracket  = "[" Space <[>;
    Rbracket  = "]" Space <]>;
    Equals    = "=" Space <=>;
    SemiColon = ";" Space <;>;
    Comma     = "," Space <,>;

    NumberDimension = NumberFloat [fmpr]? Space {number} ;
    NumberFloat = NumberInt ("." NumberPositive)? ;
    NumberPositive = Digit+ ;
    NumberInt = "-"?  Digit+ ;

    QuotedString   = "\"" UnquotedString "\"" Space {string};
    UnquotedString = Characters ("\\\"" Characters)*;
    Characters     = _*+ (&"\\\"" / &"\"") ;

    Literal      = LiteralFirst LiteralRest* Space;
    LiteralRest  = Letter / Digit / Separators ;
    LiteralFirst = Letter ;

    Separators = [-_.] ;
    Digit    = [0-9] ;
    HexDigit = [0-9] / [a-f] / [A-F] ;
    Letter   = [a-z] / [A-Z] ;
    Space    = (Blank / Comment / BlockComment)* ;
    Blank    = [ \r\n\t] <Blank Character>;
    Comment  = "//" _++ EOL <Comment>;
    BlockComment = "/*" _*+ "*/" <Comment>;
    EOL = "\n" / EOT <EOL>;
    EOT = !_ ;